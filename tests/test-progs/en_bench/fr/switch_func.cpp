#include <stdio.h>
#include <stdint.h>
#include <unistd.h>
#include <stdlib.h>
#include <openssl/aes.h>
#include <fcntl.h>
#include <sched.h>
#include <sys/mman.h>
#include "./cacheutils.h"

unsigned char key[] =
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  //0x51, 0x4d, 0xab, 0x12, 0xff, 0xdd, 0xb3, 0x32, 0x52, 0x8f, 0xbb, 0x1d, 0xec, 0x45, 0xce, 0xcc, 0x4f, 0x6e, 0x9c,
  //0x2a, 0x15, 0x5f, 0x5f, 0x0b, 0x25, 0x77, 0x6b, 0x70, 0xcd, 0xe2, 0xf7, 0x80
};

int main()
{

  unsigned char plaintext[] =
  {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
  };
  unsigned char ciphertext[128];

  size_t time;
  size_t delta;

  for (size_t byte = 0; byte < 256; byte += 16)
  {
    void (*func)(const unsigned char *, unsigned char *, const AES_KEY *) = AES_decrypt;
    time = rdtsc();
    func = AES_encrypt;
    // AES_KEY key_struct;
    // AES_set_encrypt_key(key, 128, &key_struct);
    // plaintext[0] = byte;
    // AES_encrypt(plaintext, ciphertext, &key_struct);
    delta = rdtsc() - time;
    printf("%lu\n", delta);
  }

  fflush(stdout);
  return 0;
}